paths:

  /review:
  ##################### GET ALL ##########################
    get:
      tags:
        - Review Management
      summary: "Retrieve Review details"
      produces:
        - application/json
      parameters:
        - in: query
          name: id
          type: string
          description: Review id
        - in: query
          name: status
          type: string
          enum:
            - good
            - bad
          description: good
        - in: query
          name: userId
          type: string
          description: user Id
        - in: query
          name: restaurantId
          type: string
          description: restaurant Id
        - in: query
          name: phiArea
          type: string
          description: phi area
      responses:
        200:
          $ref: "#components/responses/200"
        401:
          $ref: "#components/responses/401"
        500:
          $ref: "#components/responses/500"

    post:
      tags:
        - Review Management
      summary: "Add review details"
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              restaurantId:
                type: string
                example: "001"
              reviewDetails:
                type: string
                example: "test review"
              status:
                type: string
                enum:
                  - good
                  - bad
                example: good
              phiArea:
                 type: string
                 example: "Matara"
             
      responses:
        200:
          allOf:
            - $ref: "#components/responses/200"
            - schema:
                type: object
        500:
          $ref: "#components/responses/500"

    ##################### GET ONE BY ID ##########################
  /review/{id}:
    get:
      tags:
        - Review Management
      summary: "Retrieve review by ID "
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: Review id
      responses:
        200:
          $ref: "#components/responses/200"
        401:
          $ref: "#components/responses/401"
        500:
          $ref: "#components/responses/500"

          ##################### PUT ##########################
    put:
      tags:
        - Review Management
      summary: "Update Review"
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: Review id
        - in: body
          name: body
          description: Attributes needed to update
          require: true 
          schema:
            type: "object"
            properties:
              isPhiMark:
                type: boolean
                example: true
      responses:
        200:
          $ref: "#components/responses/200"
        401:
          $ref: "#components/responses/401"
        404:
          $ref: "#components/responses/404"
        500:
          $ref: "#components/responses/500"

  ##################### DELETE ##########################
    delete:
      tags:
        - Review Management
      summary: "Delete review "
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: Review id
       
      responses:
        200:
          $ref: "#components/responses/200"
        401:
          $ref: "#components/responses/401"
        404:
          $ref: "#components/responses/404"
        500:
          $ref: "#components/responses/500"


  
